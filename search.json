[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "In this blog I will be writing"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html",
    "href": "posts/Setting up WSL and python environment.html",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "",
    "text": "WSL implies for Windows Subsystem for Linux (WSL), where you can run a Linux environment on your Windows machine without the hassle of dual-booting or setting up a virtual machine. This guide will take you through the steps to install WSL, focusing on WSL 2, which is faster, better, and more compatible than its predecessor.\nThe basic prerequisits are that You need Windows 10 version 2004 or higher (Build 19041 and above) or Windows 11. If you’re still rocking an older version, it might be time for an upgrade—like swapping out your flip phone for a smartphone!\nIf you get any error related to virtualization. You need to have virtualization enabled which you can do by enabling Hyper V in your device\n\n\nOpen PowerShell as Administrator: Search for “PowerShell” in the Start menu. Right-click on it and select “Run as administrator”. If you get intimidated by the black screen don’t panik you are inside terminal which helps us to execute commands. More on it later! Run the Installation Command: In the PowerShell window, type the following command and press Enter\nwsl --install\nThis command will enable all the necessary features for WSL, download the Linux Kernel, and install Ubuntu as your default distribution. A restart may be required.\nIf ubuntu is not your cup of tea then you can choose another distribution by\nwsl --install -d Debian\nfor debian\n\n\n\nAfter installation, launch your installed Linux distribution from the Start menu\nYou’ll be prompted to create a username and password. Choose wisely this is your secret identity! Remember, while typing your password, nothing will appear on the screen; this is normal behavior in Linux. It’s not broken; it’s just shy.\n\n\n\nNow that you’ve got your Linux environment set up, let’s make sure it’s up to date: you can do that by just typing\nsudo apt update\nsudo apt upgrade"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-1-enable-wsl",
    "href": "posts/Setting up WSL and python environment.html#step-1-enable-wsl",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "",
    "text": "Open PowerShell as Administrator: Search for “PowerShell” in the Start menu. Right-click on it and select “Run as administrator”. If you get intimidated by the black screen don’t panik you are inside terminal which helps us to execute commands. More on it later! Run the Installation Command: In the PowerShell window, type the following command and press Enter\nwsl --install\nThis command will enable all the necessary features for WSL, download the Linux Kernel, and install Ubuntu as your default distribution. A restart may be required.\nIf ubuntu is not your cup of tea then you can choose another distribution by\nwsl --install -d Debian\nfor debian"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-2-make-a-user-account",
    "href": "posts/Setting up WSL and python environment.html#step-2-make-a-user-account",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "",
    "text": "After installation, launch your installed Linux distribution from the Start menu\nYou’ll be prompted to create a username and password. Choose wisely this is your secret identity! Remember, while typing your password, nothing will appear on the screen; this is normal behavior in Linux. It’s not broken; it’s just shy."
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-4-update-the-system",
    "href": "posts/Setting up WSL and python environment.html#step-4-update-the-system",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "",
    "text": "Now that you’ve got your Linux environment set up, let’s make sure it’s up to date: you can do that by just typing\nsudo apt update\nsudo apt upgrade"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#some-basic-definitions-and-tools-handy-in-cli",
    "href": "posts/Setting up WSL and python environment.html#some-basic-definitions-and-tools-handy-in-cli",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Some basic definitions and tools handy in cli",
    "text": "Some basic definitions and tools handy in cli\nSo here are some popular commands and definitions which we need to keep in mind while we use CLI\ndirectory - for most cases directory is your ‘folder’ we can store different files and directories in a directory.\nls : Lists the contents of a directory. Use options like -a for hidden files or -l for detailed information.\ncd [directory]: Changes the current directory to the specified one. Use cd .. to go back\nmkdir [dirname]: Creates a new directory with the specified name.\nrm -rf [dirname] : Removes a directory and everything in it. This is done without confirmation so know what you are doing"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-1-install-wget-in-you-system",
    "href": "posts/Setting up WSL and python environment.html#step-1-install-wget-in-you-system",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Step 1: Install wget in you system",
    "text": "Step 1: Install wget in you system\nyou can do so by executing -\nsudo apt install wget"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-2-download-the-setup-script-for-miniforge",
    "href": "posts/Setting up WSL and python environment.html#step-2-download-the-setup-script-for-miniforge",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Step 2: Download the setup script for miniforge",
    "text": "Step 2: Download the setup script for miniforge\nyou can do that by following these commands\n\nfor x86_64\nwget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh\n\n\nfor arm\nwget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-aarch64.sh\nthis will download the Miniforge installer in your WSL"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-3-install-miniforge-in-your-wsl",
    "href": "posts/Setting up WSL and python environment.html#step-3-install-miniforge-in-your-wsl",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Step 3: Install miniforge in your WSL",
    "text": "Step 3: Install miniforge in your WSL\nexecute the following command -\n\nFor x86_64\nbash Miniforge3-Linux-x86_64.sh\n\n\nFor Arm\nbash Miniforge3-Linux-aarch64.sh\nA simple setup will appear which will ask you to accept the licence agreement\nThen a prompt will appear telling you that setup will install miniforge in your home directory say yes to it\nAnd then miniforge will install not only python but a whole bunch of libraries which will come handy to us later.\nrestart you shell by executing bash to make it initialize miniforge"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-4-agree-to-initialize-it",
    "href": "posts/Setting up WSL and python environment.html#step-4-agree-to-initialize-it",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Step 4: Agree to initialize it",
    "text": "Step 4: Agree to initialize it\nIt will ask you if you want to initialize it whenever you start your machine and say yes to it.\nWhat it will do is that it will execute python everytime we launch wsl"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#mamba-and-conda",
    "href": "posts/Setting up WSL and python environment.html#mamba-and-conda",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Mamba and conda",
    "text": "Mamba and conda\nMamba and Conda are both powerful tools used for package and environment management in Python. They install everything we need for python and help us create virtual environments. This brings us to - ## Step 5: Enable virtual environment\nA virtual environment is a self-contained directory that allows you to manage dependencies for different projects without stepping on each other’s toes. It will help seperate python we need with the system python\nTo create a virtual environment just execute:\nmamba create -n fastai_env python=3.9\nthis will create a python virtual environment\nbut that’s not all we also need to activate it for it to work this is done by executing\nmamba activate fastai_env\n\nA pro tip - You can activate the virtual environment everytime you want by putting it in your .bashrc file. You can do that by\n\nnano .bashrc\nthis opens a text editor which we will use to edit files. Edit it by adding mamba activate fastai_env at the end of the file.\nthen press ctrl + x to exit and y to save the file."
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-6-installing-ipython-and-jupyter-lab",
    "href": "posts/Setting up WSL and python environment.html#step-6-installing-ipython-and-jupyter-lab",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Step 6: Installing ipython and jupyter lab",
    "text": "Step 6: Installing ipython and jupyter lab\n\nNeed for these tools\nIf you’re ready to kick your AI game up a notch, you need to get cozy with IPython, JupyterLab, nbdev. We have so many good reasons to use these tools\nWe will use Ipython because\n\nIt helps us to display media like Images, Videos etc\nIPython includes special commands (prefixed with % or %%) that allow you to perform tasks like timing execution or running shell commands seamlessly.\nWith improved tracebacks and debugging capabilities, it makes troubleshooting easier.\n\nWe will use Jupyter Lab because -\n\nMulti document UI - Open multiple notebooks, text files, and terminals all at once. You can juggle your projects too. No more switching tabs.\nExtensions Galore: Want to customize your experience? JupyterLab supports extensions that let you add new features or integrate with other tools. It’s like dressing up your notebook in the latest fashion make it yours\nInteractive Widgets: Create interactive visualizations and controls right in your notebooks. Want to tweak parameters on the fly? Just slide those sliders.\n\nnbdev is Important because\n\nLiterate Programming: Write code, tests, and documentation together in Jupyter notebooks, enhancing readability and maintainability.\nAutomatic Documentation: Generate up-to-date documentation directly from your notebooks, streamlining the process of creating and maintaining libraries.\nIntegrated Testing: Write and run unit tests within your notebooks, ensuring code quality with automatic execution during builds and CI/CD processes.\n\nBasically they help is making the experiance smoother for the journey. ### Installation\nHere is the command to install these tools -\nmamba install ipython jupyterlab nbdev"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-7-install-pytorch",
    "href": "posts/Setting up WSL and python environment.html#step-7-install-pytorch",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Step 7: Install pytorch",
    "text": "Step 7: Install pytorch\nPyTorch is a powerful and flexible tool for deep learning and machine learning projects. Here are some of its features\n\nDynamic Computation Graphs: Allows changes to the model on-the-fly, making debugging easier.\nTensor Operations: Supports efficient tensor computations with GPU acceleration for faster processing.\nUser-Friendly: Intuitive and Pythonic interface, great for beginners and experienced users alike.\nRich Ecosystem: Includes libraries for building neural networks and optimization, simplifying model development.\nStrong Community: Extensive documentation and active community support for learning and troubleshooting.\n\n\nInstallation\nHere is how to get it installed -\n\nFor devices with Nvidia GPU - if your device have an Nvidia GPU then you can install pytorch with CUDA support by executing following command -\n\nmamba install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia\nYou will also need to install the cuda toolkit for pytorch to work. You can do it by executing -\n\nwget https://developer.download.nvidia.com/compute/cuda/12.6.2/local_installers/cuda_12.6.2_560.35.03_linux.run\nThen run\nsudo sh cuda_12.6.2_560.35.03_linux.run\n\nFor devices with integrated graphics - If you are poor student like me and have device with integrated graphics then you should install pytorch by using following command -\n\nmamba install pytorch torchvision torchaudio cpuonly -c pytorch"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#step-8-install-fastai",
    "href": "posts/Setting up WSL and python environment.html#step-8-install-fastai",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Step 8: Install FastAI",
    "text": "Step 8: Install FastAI\nFast AI will be the main library we will be working with. It is designed to make deep learning accessible to everyone, regardless of their coding experience. It is is built on top of PyTorch designed to make the complex realm of artificial intelligence as approachable as your favorite recipe for instant noodles.\n\nInstallation\nTo install it just execute this command in your terminal -\nmamba install -c fastai fastai\nAnd you have successfully installed the tools required for the course."
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#vim",
    "href": "posts/Setting up WSL and python environment.html#vim",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Vim",
    "text": "Vim\nVim is the most supereme cli text editor that one can use in linux. Here is how to install and use it\n\nOpen WSL Terminal:\n\nLaunch your WSL terminal.\n\nUpdate Package List:\n\nBefore installing any software, update the package list by running:\nsudo apt update\n\nInstall Vim:\n\nInstall Vim by executing the following command:\nsudo apt install vim -y\nThis command retrieves and installs Vim along with its necessary components.\n\nLaunching Vim:\n\nTo create or edit a file, use the command:\nvim filename.txt\nReplace filename.txt with your desired file name. If the file does not exist, Vim will create it.\n\nBasic Navigation and Editing:\n\nUpon opening a file, you start in Normal mode. Press i to switch to Insert mode, where you can type text.\nTo return to Normal mode, press Esc.\nYou can go up down left and right in the document by either using arrow keys or using h,j,k,l keys (right,down,up,left).\n\nSaving and Exiting:\n\nTo save changes, type :w and press Enter.\nTo exit Vim, type :q and press Enter. If you want to save and exit simultaneously, type :wq."
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#ranger",
    "href": "posts/Setting up WSL and python environment.html#ranger",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Ranger",
    "text": "Ranger\nRanger is a cli file manager which you can use to navigate through files easily.\nTo install and use Ranger, a VIM-inspired file manager, in Windows Subsystem for Linux (WSL), follow these detailed steps:"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#installation-steps",
    "href": "posts/Setting up WSL and python environment.html#installation-steps",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Installation Steps",
    "text": "Installation Steps\n\nOpen WSL Terminal:\n\nLaunch your WSL terminal\n\nInstall Prerequisites:\n\nUpdate the package list and install the necessary packages (make, git, and vim) by running:\nsudo apt update\nsudo apt install make git vim -y\n\nInstall Ranger:\nsudo apt install ranger -y\nConfigure Ranger:\n\nRun Ranger once to create the configuration directory:\nranger"
  },
  {
    "objectID": "posts/Setting up WSL and python environment.html#using-ranger",
    "href": "posts/Setting up WSL and python environment.html#using-ranger",
    "title": "How To Setup WSL and Python for FastAI",
    "section": "Using Ranger",
    "text": "Using Ranger\n\nLaunching Ranger:\n\nStart Ranger by typing:\nranger\n\nInterface Overview:\n\nThe interface is divided into three columns:\n\nLeft Column: Displays the parent directory.\nMiddle Column: Shows contents of the current directory.\nRight Column: Provides a preview of the selected file or folder.\n\n\nBasic Navigation:\n\nUse the following keys to navigate:\n\nArrow keys or h, j, k, l for left, down, up, and right respectively.\nEnter to open a file or directory.\nq to quit.\n\n\n\n\nCopying, Pasting, and Deleting Files\n\nCopying Files:\n\nTo copy a file or directory, navigate to it and press yy (yank).\nTo copy multiple files, select them using Space and then press yy.\n\nPasting Files:\n\nNavigate to the destination directory and press p to paste the copied files.\n\nDeleting Files:\n\nTo delete a file or directory, navigate to it and press dd (delete).\nConfirm the deletion when prompted."
  }
]